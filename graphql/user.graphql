"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
}

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      orderBy: _ @orderBy(columns: ["id","email", "name"])
      name: String @where(operator: "like")
      email: String @where(operator: "like")
    ): [User!]! @all

    usersCount: Int! @count(model: "User")

    usersPaginated(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
      email: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

}


type Mutation {
  createUser(
    name: String!
    email: String! @rules(apply: ["email", "unique:users"])
    password: String! @bcrypt @rules(apply: ["min:6"])
  ): User @create

  updateUser(id: ID!,name: String!,email: String!): User @update @validator
  deleteUser(id: ID!): User @delete
}
